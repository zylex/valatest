/* valatest.h generated by valac 0.20.1, the Vala compiler, do not modify */


#ifndef ___HOME_ZYLEX_DROPBOX_WORKSPACE_VALA_VALATEST_VALATEST_H__
#define ___HOME_ZYLEX_DROPBOX_WORKSPACE_VALA_VALATEST_VALATEST_H__

#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>

G_BEGIN_DECLS


#define VALA_TEST_TYPE_TEST_CASE (vala_test_test_case_get_type ())
#define VALA_TEST_TEST_CASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), VALA_TEST_TYPE_TEST_CASE, ValaTestTestCase))
#define VALA_TEST_TEST_CASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), VALA_TEST_TYPE_TEST_CASE, ValaTestTestCaseClass))
#define VALA_TEST_IS_TEST_CASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), VALA_TEST_TYPE_TEST_CASE))
#define VALA_TEST_IS_TEST_CASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), VALA_TEST_TYPE_TEST_CASE))
#define VALA_TEST_TEST_CASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), VALA_TEST_TYPE_TEST_CASE, ValaTestTestCaseClass))

typedef struct _ValaTestTestCase ValaTestTestCase;
typedef struct _ValaTestTestCaseClass ValaTestTestCaseClass;
typedef struct _ValaTestTestCasePrivate ValaTestTestCasePrivate;

struct _ValaTestTestCase {
	GObject parent_instance;
	ValaTestTestCasePrivate * priv;
};

struct _ValaTestTestCaseClass {
	GObjectClass parent_class;
	void (*set_up) (ValaTestTestCase* self);
	void (*tear_down) (ValaTestTestCase* self);
};

typedef void (*ValaTestTestCaseTestMethod) (void* user_data);
typedef enum  {
	VALA_TEST_ASSERTION_ERROR_ASSERTION_FAILED
} ValaTestAssertionError;
#define VALA_TEST_ASSERTION_ERROR vala_test_assertion_error_quark ()

GType vala_test_test_case_get_type (void) G_GNUC_CONST;
ValaTestTestCase* vala_test_test_case_construct (GType object_type, const gchar* name);
void vala_test_test_case_add_test (ValaTestTestCase* self, const gchar* name, ValaTestTestCaseTestMethod test, void* test_target, GDestroyNotify test_target_destroy_notify);
void vala_test_test_case_set_up (ValaTestTestCase* self);
void vala_test_test_case_tear_down (ValaTestTestCase* self);
GTestSuite* vala_test_test_case_get_suite (ValaTestTestCase* self);
GQuark vala_test_assertion_error_quark (void);
void vala_test_assert_true (gboolean condition, const gchar* message, GError** error);
void vala_test_assert_false (gboolean condition, const gchar* message, GError** error);
void vala_test_assert_null (GObject* obj, const gchar* message, GError** error);
void vala_test_assert_not_null (GObject* obj, const gchar* message, GError** error);
void vala_test_fail (const gchar* message, GError** error);


G_END_DECLS

#endif
